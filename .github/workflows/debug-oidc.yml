name: OIDC Token Debug Dump

on:
  # This makes the workflow manually triggerable from the GitHub Actions UI.
  workflow_dispatch:
    inputs:
      role_to_test:
        description: 'The full ARN of the IAM role to test'
        required: true

permissions:
  id-token: write
  contents: read

jobs:
  dump-and-test-token:
    name: Dump OIDC Token and Test Role Assumption
    runs-on: ubuntu-latest

    steps:
      - name: Decode OIDC Token Payload
        id: decode_token
        run: |
          # The GitHub runner provides the URL and a temporary token to get the real OIDC JWT
          OIDC_JWT=$(curl -s -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" "$ACTIONS_ID_TOKEN_REQUEST_URL&audience=sts.amazonaws.com" | jq -r .value)
          
          echo "DECODED OIDC TOKEN PAYLOAD:"
          echo "--------------------------------"
          # Split the JWT, get the payload (the middle part), decode from base64, and pretty-print with jq
          echo "$OIDC_JWT" | cut -d '.' -f 2 | base64 --decode | jq .
          echo "--------------------------------"

      - name: Attempt to Assume Role
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ inputs.role_to_test }}
          # CORRECTED: Uses the repository secret for the AWS Region for consistency.
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Verify AWS Identity
        run: |
          echo "Successfully assumed role. AWS Identity:"
          aws sts get-caller-identity
