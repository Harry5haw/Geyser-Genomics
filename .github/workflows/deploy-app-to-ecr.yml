name: Build and Push App to ECR

on:
  push:
    branches:
      - main
    paths:
      - 'app/**'

permissions:
  id-token: write
  contents: read

jobs:
  build-and-push-image:
    name: Build and Push to ECR
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.ECR_IAM_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, Tag, and Push Docker Image
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: genomeflow-app
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # MODIFIED: Added --no-cache to ensure the latest code is always used.
          # Build and tag the image with the unique commit SHA
          docker build --no-cache -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./app
          
          # Also tag the same image with 'latest' to be used by the Batch Job Definition
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
          
          # Push the unique SHA-tagged image
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          
          # Push the 'latest' tag, updating the pointer in ECR
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          
          echo "Pushed image tags: $IMAGE_TAG and latest"
